import { SupportedChain } from "../types/chain";
import { IConnector } from "../types/connectors";
interface IuseStore {
    isInitialized: boolean;
    modalIsOpen: boolean;
    useWeb3React: any;
    supportedChains: SupportedChain[];
    connectors: IConnector[];
    setModalIsOpen: (modalIsOpen: boolean) => void;
    setUseWeb3React: (useWeb3React: any) => void;
    setIsInitialized: (isInitialized: boolean) => void;
    setSupportedChains: (supportedChains: SupportedChain[]) => void;
    connect: () => void;
    injectAccountListener: () => void;
    activateInjected: (activate: any, userChaneId: string) => void;
    switchNetwork: (chain: SupportedChain) => void;
    addConnectors: (connector: IConnector[]) => void;
}
declare const useStore: import("zustand").UseBoundStore<import("zustand").StoreApi<IuseStore>>;
export default useStore;
