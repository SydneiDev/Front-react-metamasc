import React, { useEffect, useLayoutEffect } from "react";
import { createPortal } from "react-dom";
import useStore from "../../../store/store";
import WalletsModal from "../wallets-modal";
var Web3ReactModal = function (_a) {
    var useWeb3React = _a.useWeb3React, supportedChains = _a.supportedChains, connectors = _a.connectors;
    var _b = useStore(), setIsInitialized = _b.setIsInitialized, setUseWeb3React = _b.setUseWeb3React, isInitialized = _b.isInitialized, setSupportedChains = _b.setSupportedChains, activateInjected = _b.activateInjected, addConnectors = _b.addConnectors;
    var _c = useWeb3React(), activate = _c.activate, chainId = _c.chainId;
    useLayoutEffect(function () {
        setUseWeb3React(useWeb3React);
        setSupportedChains(supportedChains);
        setIsInitialized(true);
    }, []);
    useEffect(function () {
        if (localStorage.getItem("walletIsConnected") === "true" && (window === null || window === void 0 ? void 0 : window.ethereum)) {
            activateInjected(activate, chainId);
        }
        if (connectors) {
            addConnectors(connectors);
        }
    }, []);
    return isInitialized ? createPortal(React.createElement(WalletsModal, null), document.body) : React.createElement(React.Fragment, null);
};
export default Web3ReactModal;
