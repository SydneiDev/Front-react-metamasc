{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KINHO\\\\ProjectNew\\\\reactethers\\\\project-name\\\\src\\\\Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport { useWeb3ReactModal } from '@bitiumagency/web3-react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Mint = () => {\n  _s();\n\n  const {\n    connect\n  } = useWeb3ReactModal();\n  const {\n    active,\n    account,\n    library\n  } = useWeb3React();\n  const [NFTContract, setNFTContract] = useState();\n  useEffect(() => {\n    if (library) {\n      const abi = [{\n        \"inputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"_quantity\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }];\n      const contractAddress = '0x523ae0dac58416227ed3d5c0ee6c164763762452';\n      setNFTContract(new ethers.Contract(contractAddress, abi, library.getSigner()));\n    }\n  }, [library]);\n\n  const handleMint = async () => {\n    await NFTContract.mint(1, {\n      value: ethers.utils.parseEther('0.001')\n    });\n    alert('Sua transação foi enviada');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sua conta: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMint,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Conecte-se a uma carteira para criar NFT.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connect,\n        children: \"Conectar carteira\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Mint, \"83O/gLNRvMWTtVz1oKwE7/V/H2I=\", false, function () {\n  return [useWeb3ReactModal, useWeb3React];\n});\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"names":["React","useEffect","useState","useWeb3React","ethers","useWeb3ReactModal","Mint","connect","active","account","library","NFTContract","setNFTContract","abi","contractAddress","Contract","getSigner","handleMint","mint","value","utils","parseEther","alert"],"sources":["C:/Users/KINHO/ProjectNew/reactethers/project-name/src/Mint.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport { useWeb3ReactModal } from '@bitiumagency/web3-react-modal';\r\n\r\nconst Mint = () => {\r\n    const { connect } = useWeb3ReactModal()\r\n    const { active, account, library } = useWeb3React()\r\n    const [NFTContract, setNFTContract] = useState()\r\n\r\n    useEffect(() => {\r\n        if (library) {\r\n            const abi = [\r\n                { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_quantity\", \"type\": \"uint256\" }], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }\r\n            ]\r\n            const contractAddress = '0x523ae0dac58416227ed3d5c0ee6c164763762452'\r\n            setNFTContract(new ethers.Contract(contractAddress, abi, library.getSigner()))\r\n        }\r\n    }, [library])\r\n\r\n\r\n    const handleMint = async () => {\r\n        await NFTContract.mint(1, {\r\n            value: ethers.utils.parseEther('0.001'),\r\n        })\r\n        alert('Sua transação foi enviada')\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            {active ?\r\n                <>\r\n                    <h1>Mint NFT</h1>\r\n                    <p>Sua conta: {account}</p>\r\n                    <button onClick={handleMint}>Mint</button>\r\n                </>\r\n                :\r\n                <>\r\n                    <p>\r\n                    Conecte-se a uma carteira para criar NFT.\r\n                    </p>\r\n                    <button onClick={connect}>Conectar carteira</button>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mint"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM;IAAEC;EAAF,IAAcF,iBAAiB,EAArC;EACA,MAAM;IAAEG,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA+BP,YAAY,EAAjD;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIS,OAAJ,EAAa;MACT,MAAMG,GAAG,GAAG,CACR;QAAE,UAAU,CAAC;UAAE,gBAAgB,SAAlB;UAA6B,QAAQ,WAArC;UAAkD,QAAQ;QAA1D,CAAD,CAAZ;QAAqF,QAAQ,MAA7F;QAAqG,WAAW,EAAhH;QAAoH,mBAAmB,SAAvI;QAAkJ,QAAQ;MAA1J,CADQ,CAAZ;MAGA,MAAMC,eAAe,GAAG,4CAAxB;MACAF,cAAc,CAAC,IAAIR,MAAM,CAACW,QAAX,CAAoBD,eAApB,EAAqCD,GAArC,EAA0CH,OAAO,CAACM,SAAR,EAA1C,CAAD,CAAd;IACH;EACJ,CARQ,EAQN,CAACN,OAAD,CARM,CAAT;;EAWA,MAAMO,UAAU,GAAG,YAAY;IAC3B,MAAMN,WAAW,CAACO,IAAZ,CAAiB,CAAjB,EAAoB;MACtBC,KAAK,EAAEf,MAAM,CAACgB,KAAP,CAAaC,UAAb,CAAwB,OAAxB;IADe,CAApB,CAAN;IAGAC,KAAK,CAAC,2BAAD,CAAL;EACH,CALD;;EAOA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKd,MAAM,gBACH;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,0BAAeC,OAAf;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,OAAO,EAAEQ,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA,gBADG,gBAOH;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAQ,OAAO,EAAEV,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;EARR;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CAzCD;;GAAMD,I;UACkBD,iB,EACiBF,Y;;;KAFnCG,I;AA2CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}